{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91964\\\\Desktop\\\\service-center\\\\src\\\\components\\\\NewOrder.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewOrder = () => {\n  _s();\n\n  const userData = useSelector(store => store.userDetails); // Get data of only this user. store it in redux\n  // GET /orders?owner_name=john will give you all order of user john\n  //  on submit click create a new order, new order has status `Not Accepted`\n\n  const [FormData, setFormData] = useState({\n    problem: null,\n    owner_name: userData.username,\n    brand: null\n  });\n\n  const handleChange = e => {\n    setFormData({ ...FormData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        className: \"new-problem\",\n        type: \"text\",\n        name: \"problem\",\n        placeholder: \"Enter problem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: userData.username // populating the name field\n        ,\n        className: \"owner-name\",\n        type: \"text\",\n        name: \"owner_name\",\n        placeholder: \"yourname\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        className: \"brand\",\n        type: \"text\",\n        name: \"brand\",\n        placeholder: \"Enter brand name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pastOrders\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"past-orders\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), \". \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"problem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 51\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status\",\n          children: \"Status: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewOrder, \"ELItTovuMv5O1gMis1M9UarrUiU=\", false, function () {\n  return [useSelector];\n});\n\n_c = NewOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewOrder\");","map":{"version":3,"names":["useState","useSelector","NewOrder","userData","store","userDetails","FormData","setFormData","problem","owner_name","username","brand","handleChange","e","target","name","value"],"sources":["C:/Users/91964/Desktop/service-center/src/components/NewOrder.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nexport const NewOrder = () => {\n    const userData = useSelector(store => store.userDetails);\n    // Get data of only this user. store it in redux\n    // GET /orders?owner_name=john will give you all order of user john\n    //  on submit click create a new order, new order has status `Not Accepted`\n    const [FormData, setFormData] = useState({\n        problem: null,\n        owner_name: userData.username,\n        brand: null\n    });\n\n    const handleChange = (e) => {\n        setFormData({\n            ...FormData,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    return (\n        <div>\n            <div className=\"form\">\n                <input\n                    onChange={handleChange}\n                    className=\"new-problem\"\n                    type=\"text\"\n                    name=\"problem\"\n                    placeholder=\"Enter problem\"\n                />\n                {/* This input is readonly, it's coming from redux */}\n                <input\n                    onChange={handleChange}\n                    value={userData.username} // populating the name field\n                    className=\"owner-name\"\n                    type=\"text\"\n                    name=\"owner_name\"\n                    placeholder=\"yourname\"\n                    readOnly\n                />\n                <input\n                    onChange={handleChange}\n                    className=\"brand\"\n                    type=\"text\"\n                    name=\"brand\"\n                    placeholder=\"Enter brand name\"\n                />\n                {/* Create new problem, show it in below form immediately */}\n                <button className=\"submit\">submit</button>\n            </div>\n\n            <div className=\"pastOrders\">\n                {/* this button filters the data below. */}\n                {/* it's just a toggle of redux state something like `showUnfinished`  */}\n                <button className=\"filter\">\n                    {/* Text should change like:   Show {showUnfinished ? \"all\" : \"Only unfinished\"} */}\n                </button>\n\n                {/* Here create a div for every oreder, filter them before based on `showUnfinished` */}\n                <div className=\"past-orders\">\n                    <span className=\"id\"></span>. <span className=\"problem\"></span>{\" \"}\n                    <span className=\"cost\">\n                        {/* if status is not accepted then keep it empty otherwise show cost like $1234 */}\n                    </span>\n                    <p className=\"status\">Status: </p>\n                    <hr />\n                </div>\n            </div>\n        </div>\n    );\n};"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC1B,MAAMC,QAAQ,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAA5B,CAD0B,CAE1B;EACA;EACA;;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;IACrCQ,OAAO,EAAE,IAD4B;IAErCC,UAAU,EAAEN,QAAQ,CAACO,QAFgB;IAGrCC,KAAK,EAAE;EAH8B,CAAD,CAAxC;;EAMA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IACxBN,WAAW,CAAC,EACR,GAAGD,QADK;MAER,CAACO,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;IAFlB,CAAD,CAAX;EAIH,CALD;;EAOA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QACI,QAAQ,EAAEJ,YADd;QAEI,SAAS,EAAC,aAFd;QAGI,IAAI,EAAC,MAHT;QAII,IAAI,EAAC,SAJT;QAKI,WAAW,EAAC;MALhB;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QACI,QAAQ,EAAEA,YADd;QAEI,KAAK,EAAET,QAAQ,CAACO,QAFpB,CAE8B;QAF9B;QAGI,SAAS,EAAC,YAHd;QAII,IAAI,EAAC,MAJT;QAKI,IAAI,EAAC,YALT;QAMI,WAAW,EAAC,UANhB;QAOI,QAAQ;MAPZ;QAAA;QAAA;QAAA;MAAA,QATJ,eAkBI;QACI,QAAQ,EAAEE,YADd;QAEI,SAAS,EAAC,OAFd;QAGI,IAAI,EAAC,MAHT;QAII,IAAI,EAAC,OAJT;QAKI,WAAW,EAAC;MALhB;QAAA;QAAA;QAAA;MAAA,QAlBJ,eA0BI;QAAQ,SAAS,EAAC,QAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA1BJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eA8BI;MAAK,SAAS,EAAC,YAAf;MAAA,wBAGI;QAAQ,SAAS,EAAC;MAAlB;QAAA;QAAA;QAAA;MAAA,QAHJ,eAQI;QAAK,SAAS,EAAC,aAAf;QAAA,wBACI;UAAM,SAAS,EAAC;QAAhB;UAAA;UAAA;UAAA;QAAA,QADJ,qBACkC;UAAM,SAAS,EAAC;QAAhB;UAAA;UAAA;UAAA;QAAA,QADlC,EACoE,GADpE,eAEI;UAAM,SAAS,EAAC;QAAhB;UAAA;UAAA;UAAA;QAAA,QAFJ,eAKI;UAAG,SAAS,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ,eAMI;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA,QA9BJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkDH,CApEM;;GAAMV,Q;UACQD,W;;;KADRC,Q"},"metadata":{},"sourceType":"module"}